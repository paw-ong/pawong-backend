server {
    listen 80;
    location / {
        proxy_pass http://host.docker.internal:5004/;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /api/ {
        proxy_pass http://host.docker.internal:8080/api/;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 로그인/리다이렉트 핸들러 (React에게 전달)
    location = /oauth2/redirect {
        proxy_pass       http://host.docker.internal:5004/;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


    # OAuth2 인증 요청 (구글/카카오 호출용)
    location /oauth2/authorization/ {
        proxy_pass       http://host.docker.internal:8080/oauth2/authorization/;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 토큰 교환용 엔드포인트
    location /oauth2/token {
        proxy_pass       http://host.docker.internal:8080/oauth2/token;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /login/oauth2/ {
        proxy_pass http://host.docker.internal:8080/login/oauth2/;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 백엔드가 보내는 redirect 응답 헤더의 host를 프론트 host로 치환
        proxy_redirect   http://host.docker.internal:8080/ /;
    }
}
